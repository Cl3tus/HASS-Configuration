blueprint:
  name: ZWaveJS - Heatit Z-Push Button 8 scene controller
  description: 'Perform actions when a Heatit Z-Push Button is pressed.


    You can also assign actions to long pressing a button and an action when you release
    the button.

    '
  domain: automation
  input:
    zwavejs_device:
      name: ZWaveJS Device
      description: The Heatit Z-Push Button 8 to listen for events on.
      selector:
        device:
          integration: zwave_js
          manufacturer: Heatit
          model: Z Push Button 8
          multiple: false
    button_selector:
      name: Selected button
      description: The button to assign an action to.
      selector:
        number:
          min: 1.0
          max: 8.0
          step: 1.0
          mode: box
      default: 1
    button_pressed_actions:
      name: Button pressed Actions
      description: The actions to perform when the button is pressed.
      selector:
        action: {}
      default: []
    button_hold_actions:
      name: Button hold Actions
      description: The actions to perform when the button is hold.
      selector:
        action: {}
      default: []
    button_release_actions:
      name: Button release Actions
      description: The actions to perform when the button is released.
      selector:
        action: {}
      default: []
  source_url: https://community.home-assistant.io/t/zwavejs-heatit-z-push-button-8-scene-controller/305237
mode: single
trigger:
- platform: event
  event_type: zwave_js_value_notification
variables:
  logger: blueprint.zwavejs_scene_activation
  zwavejs_device: !input 'zwavejs_device'
  button_selector: !input 'button_selector'
  button: Scene 00{{button_selector}}
action:
- choose:
  - conditions:
    - condition: template
      value_template: '{{ trigger.event.data.device_id == zwavejs_device }}'
    - condition: template
      value_template: '{{ trigger.event.data.command_class_name == ''Central Scene''
        }}'
    sequence:
    - choose:
      - conditions:
        - condition: template
          value_template: '{{ trigger.event.data.label == button and trigger.event.data.value
            == ''KeyPressed'' }}'
        sequence: !input 'button_pressed_actions'
      - conditions:
        - condition: template
          value_template: '{{ trigger.event.data.label == button and trigger.event.data.value
            == ''KeyHeldDown'' }}'
        sequence: !input 'button_hold_actions'
      - conditions:
        - condition: template
          value_template: '{{ trigger.event.data.label == button and trigger.event.data.value
            == ''KeyReleased'' }}'
        sequence: !input 'button_release_actions'
      default:
      - service: system_log.write
        data:
          level: debug
          logger: '{{ logger }}'
          message: Activated scene '{{ trigger.event.data.label }}' with value '{{
            trigger.event.data.value }}' for node '{{ zwavejs_device }}' ({{ trigger.event.data.node_id
            }})
  default: []
